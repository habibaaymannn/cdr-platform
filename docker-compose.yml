services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9093:9093"
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - cdr-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 60s

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=habiba@2005
      - MYSQL_DATABASE=cdr_db
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cdr-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=habiba@2005
      - POSTGRES_DB=cdr2_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cdr-network

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    ports:
#      - "8081:8080"
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HTTP_PORT=8080
      - KC_HOSTNAME_PORT=8080
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - KC_FRONTEND_URL=http://keycloak:8080
      - KC_HOSTNAME=keycloak
    command:
      - start-dev
      - --import-realm
      - --hostname-strict=false
    healthcheck:
      test: [ "CMD", "sh", "-c", "cat /proc/net/tcp | grep 1F90" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - cdr-network

  backend:
    container_name: backend
    build:
      context: ./ms-backend
    ports:
      - "8084:8080"
    depends_on:
      keycloak:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - cdr-network

  loader:
    container_name: loader
    build:
      context: ./ms-loader
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cdr2_db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - LOADER_DIRECTORY_PATH=/input
    volumes:
      - ./ms-loader/src/main/resources/input:/input
    networks:
      - cdr-network

  frontend:
    container_name: frontend
    build:
      context: ./ms-frontend
    ports:
      - "8083:80"
    depends_on:
      - backend
    networks:
      - cdr-network

networks:
  cdr-network:
    driver: bridge

volumes:
  postgres_data:
  mysql_data:
